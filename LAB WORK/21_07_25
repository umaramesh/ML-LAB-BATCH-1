{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNIqDnmDCCxEEaiXHYM3uKY"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TSXmQicZ4rYU","executionInfo":{"status":"ok","timestamp":1753083961811,"user_tz":-330,"elapsed":505,"user":{"displayName":"Sethumadhavan","userId":"09172661892156620393"}},"outputId":"201b3edd-eede-4df3-fd79-d4ca8c126254"},"outputs":[{"output_type":"stream","name":"stdout","text":["   id        first       last  gender  Marks  selected\n","0   1        Leone    Debrick  Female     50      True\n","1   2       Romola  Phinnessy  Female     60     False\n","2   3         Geri      Prium    Male     65     False\n","3   4        Sandy   Doveston  Female     95     False\n","4   5      Jacenta     Jansik  Female     31      True\n","5   6  Diane-marie   Medhurst  Female     45      True\n","6   7       Austen       Pool    Male     45      True\n","7   8        Vanya    Teffrey    Male     70     False\n","8   9     Giordano      Elloy    Male     36     False\n","9  10       Rozele    Fawcett  Female     50     False\n"]}],"source":["import pandas as pd\n","\n","df=pd.read_csv(\"Sample.csv\")\n","print(df)"]},{"cell_type":"code","source":["marks_mean=df['Marks'].mean()\n","marks_median=df['Marks'].median()\n","marks_mode=df['Marks'].mode()\n","marks_sum=df['Marks'].sum()\n","marks_stdev=df['Marks'].std()\n","marks_max=df['Marks'].max()\n","marks_min=df['Marks'].min()\n","marks_var=df['Marks'].var()\n","marks_valcnt=df['Marks'].value_counts()\n","marks_count=df['Marks'].count()\n","marks_25=df['Marks'].quantile(0.25)\n","marks_cumsum=df['Marks'].cumsum()\n","marks_cumpro=df['Marks'].cumprod()\n","\n","print(\"\\n The Mean of marks :\",marks_mean)\n","print(\"\\n The Median of marks :\",marks_median)\n","print(\"\\n The Mode of marks :\",marks_mode)\n","print(\"\\n The Sum of marks :\",marks_sum)\n","print(\"\\n The Standard deviation of marks :\",marks_stdev)\n","print(\"\\n The Variance of marks :\",marks_var)\n","print(\"\\n The Maximum marks :\",marks_max)\n","print(\"\\n The Minimum marks :\",marks_min)\n","print(\"\\n The total number of rows :\",marks_count)\n","print(\"\\n The Value Count of marks :\",marks_valcnt)\n","print(\"\\n The 25th percentile of marks :\",marks_25)\n","print(\"\\n The Cumulative sum of marks :\",marks_cumsum)\n","print(\"\\n The Cumulative product of marks :\",marks_cumpro)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"45zlBMId84dF","executionInfo":{"status":"ok","timestamp":1753088175131,"user_tz":-330,"elapsed":364,"user":{"displayName":"Sethumadhavan","userId":"09172661892156620393"}},"outputId":"085c74bd-cfe7-431b-feeb-99bebd29350f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n"," The Mean of marks : 54.7\n","\n"," The Median of marks : 50.0\n","\n"," The Mode of marks : 0    45\n","1    50\n","Name: Marks, dtype: int64\n","\n"," The Sum of marks : 547\n","\n"," The Standard deviation of marks : 18.666964283341724\n","\n"," The Variance of marks : 348.4555555555555\n","\n"," The Maximum marks : 95\n","\n"," The Minimum marks : 31\n","\n"," The total number of rows : 10\n","\n"," The Value Count of marks : Marks\n","50    2\n","45    2\n","65    1\n","60    1\n","95    1\n","31    1\n","70    1\n","36    1\n","Name: count, dtype: int64\n","\n"," The 25th percentile of marks : 45.0\n","\n"," The Cumulative sum of marks : 0     50\n","1    110\n","2    175\n","3    270\n","4    301\n","5    346\n","6    391\n","7    461\n","8    497\n","9    547\n","Name: Marks, dtype: int64\n","\n"," The Cumulative product of marks : 0                    50\n","1                  3000\n","2                195000\n","3              18525000\n","4             574275000\n","5           25842375000\n","6         1162906875000\n","7        81403481250000\n","8      2930525325000000\n","9    146526266250000000\n","Name: Marks, dtype: int64\n"]}]},{"cell_type":"code","source":["print(\"\\n\",df['Marks'].describe())\n","print(\"\\n-----------------------------\")\n","print(\"\\n\",df['gender'].describe())\n","print(\"\\n-----------------------------\")\n","print(\"\\n\",df['selected'].describe())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SUFMKyVXA-0N","executionInfo":{"status":"ok","timestamp":1753085193021,"user_tz":-330,"elapsed":4,"user":{"displayName":"Sethumadhavan","userId":"09172661892156620393"}},"outputId":"a8722686-fe7b-419e-86fa-87cca0046757"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n"," count    10.000000\n","mean     54.700000\n","std      18.666964\n","min      31.000000\n","25%      45.000000\n","50%      50.000000\n","75%      63.750000\n","max      95.000000\n","Name: Marks, dtype: float64\n","\n","-----------------------------\n","\n"," count         10\n","unique         2\n","top       Female\n","freq           6\n","Name: gender, dtype: object\n","\n","-----------------------------\n","\n"," count        10\n","unique        2\n","top       False\n","freq          6\n","Name: selected, dtype: object\n"]}]},{"cell_type":"code","source":["print(\"\\nHistogram of Marks :\\n\",df['Marks'].hist())\n","print(\"\\n Covariance between values :\\n\",df[['id','Marks','selected']].cov())\n","print(\"\\n Correlation between values :\\n\",df[['id','Marks','selected']].corr())\n","print(\"\\n Crosstab between values :\\n\",pd.crosstab(df['Marks'],df['selected']))\n","print(\"\\n\")\n","\n","import matplotlib.pyplot as plt\n","\n","plt.scatter(df['id'],df['Marks'])\n","plt.xlabel(\"ID\")\n","plt.ylabel(\"Marks\")\n","plt.title(\"Scatter plot between ID and Marks\")\n","plt.show()\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":975},"id":"CrUBE2UzCSpl","executionInfo":{"status":"ok","timestamp":1753086390796,"user_tz":-330,"elapsed":484,"user":{"displayName":"Sethumadhavan","userId":"09172661892156620393"}},"outputId":"6c5a6a5e-fa13-4a4b-8aa5-c2f2e0702411"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Histogram of Marks :\n"," Axes(0.125,0.11;0.775x0.77)\n","\n"," Covariance between values :\n","                  id       Marks  selected\n","id         9.166667  -15.500000 -0.333333\n","Marks    -15.500000  348.455556 -5.311111\n","selected  -0.333333   -5.311111  0.266667\n","\n"," Correlation between values :\n","                 id     Marks  selected\n","id        1.000000 -0.274254 -0.213201\n","Marks    -0.274254  1.000000 -0.550969\n","selected -0.213201 -0.550969  1.000000\n","\n"," Crosstab between values :\n"," selected  False  True \n","Marks                 \n","31            0      1\n","36            1      0\n","45            0      2\n","50            1      1\n","60            1      0\n","65            1      0\n","70            1      0\n","95            1      0\n","\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","\n","le=LabelEncoder()\n","encoded_gender=le.fit_transform(df['gender'])\n","encoded_selected=le.fit_transform(df['selected'])\n","\n","print(\"\\n Encoded gender :\",encoded_gender)\n","print(\"\\n Encoded Selected :\",encoded_selected)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"13Qks_9JGqOP","executionInfo":{"status":"ok","timestamp":1753086726308,"user_tz":-330,"elapsed":6,"user":{"displayName":"Sethumadhavan","userId":"09172661892156620393"}},"outputId":"8ed0baa5-c0d2-47cf-b381-562a1822904e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n"," Encoded gender : [0 0 1 0 0 0 1 1 1 0]\n","\n"," Encoded Selected : [1 0 0 0 1 1 1 0 0 0]\n"]}]},{"cell_type":"code","source":["from sklearn.preprocessing import MinMaxScaler\n","from sklearn.preprocessing import MaxAbsScaler\n","\n","scaler=MinMaxScaler()\n","scaled_marks=scaler.fit_transform(df[['Marks']])\n","print(\"\\n Min Max Scaler :\\n\",scaled_marks)\n","\n","scaler2=MaxAbsScaler()\n","scaled_marks2=scaler2.fit_transform(df[['Marks']])\n","print(\"\\n Max Abs Scaler :\\n\",scaled_marks2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l-JKaPHFHfM-","executionInfo":{"status":"ok","timestamp":1753087477529,"user_tz":-330,"elapsed":364,"user":{"displayName":"Sethumadhavan","userId":"09172661892156620393"}},"outputId":"1a06fc05-3bfe-42a0-da64-a7157ee4faab"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n"," Min Max Scaler :\n"," [[0.296875]\n"," [0.453125]\n"," [0.53125 ]\n"," [1.      ]\n"," [0.      ]\n"," [0.21875 ]\n"," [0.21875 ]\n"," [0.609375]\n"," [0.078125]\n"," [0.296875]]\n","\n"," Max Abs Scaler :\n"," [[0.52631579]\n"," [0.63157895]\n"," [0.68421053]\n"," [1.        ]\n"," [0.32631579]\n"," [0.47368421]\n"," [0.47368421]\n"," [0.73684211]\n"," [0.37894737]\n"," [0.52631579]]\n"]}]},{"cell_type":"code","source":["from sklearn.preprocessing import Binarizer\n","\n","binarizer=Binarizer(threshold=49)\n","marks_binarized=binarizer.fit_transform(df[['Marks']])\n","print(marks_binarized)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pVW2dpxIIkou","executionInfo":{"status":"ok","timestamp":1753087235728,"user_tz":-330,"elapsed":361,"user":{"displayName":"Sethumadhavan","userId":"09172661892156620393"}},"outputId":"5472c903-cc14-4f7d-ec44-ce10f74053ac"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1]\n"," [1]\n"," [1]\n"," [1]\n"," [0]\n"," [0]\n"," [0]\n"," [1]\n"," [0]\n"," [1]]\n"]}]}]}